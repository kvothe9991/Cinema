@model Cine.ViewModels.EstadisticasFormModel

@{
    ViewBag.Title = "Estadísticas - Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Details", "Estadisticas", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="container border-1">
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <label class="form-label">Estadística a mostrar:</label>
            @Html.DropDownListFor(
               model => model.Criterio,
               EnumHelper.GetSelectList(typeof(Cine.Data.CriterioEst)),
               new
                    {
                       @class = "form-control",
                       @id = "dropdown"
                   }
            )
        </div>
        <div id="dates" class="row py-3">
            <div class="container">
                <label class="form-label">Intervalo de fechas:</label>
                <div id="dates" class="row px-5">
                    <div class="col">
                        <div class="form-group">
                            <label class="form-label">Desde:</label>
                            @Html.EditorFor(model => model.Desde, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            <label class="form-label">Hasta:</label>
                            @Html.EditorFor(model => model.Hasta, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row py-2 text-center">
            <div class="col">
                <input type="submit" value="Mostrar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script>
    const dropdown = document.getElementById('dropdown');
    const dates = document.getElementById('dates');

    dates.style.display = "none";

    dropdown.addEventListener('change', () => {
        if (dropdown.value !== '4') {
            dates.style.display = "none";
        }
        else {
            dates.style.display = "flex"
        }
    });
</script>